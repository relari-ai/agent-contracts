services:
  zookeeper:
    image: bitnami/zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - jaeger-network
    profiles:
      - runtime-certification

  kafka:
    image: bitnami/kafka:3.9.0
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - jaeger-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server 127.0.0.1:9092"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    profiles:
      - runtime-certification

  redis:
    image: redis:alpine
    volumes: 
      - cache:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - jaeger-network
    profiles:
      - runtime-certification

  jaeger:
    volumes:
      - ./configs/jaeger-certification-config.yaml:/jaeger/config.yaml
    depends_on:
      kafka:
        condition: service_healthy
    profiles:
      - runtime-certification
